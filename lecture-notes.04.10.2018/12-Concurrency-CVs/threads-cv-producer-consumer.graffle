<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ActiveLayerIndex</key>
	<integer>0</integer>
	<key>ApplicationVersion</key>
	<array>
		<string>com.omnigroup.OmniGraffle</string>
		<string>138.17.0.133677</string>
	</array>
	<key>AutoAdjust</key>
	<true/>
	<key>BackgroundGraphic</key>
	<dict>
		<key>Bounds</key>
		<string>{{0, 0}, {576, 733}}</string>
		<key>Class</key>
		<string>SolidGraphic</string>
		<key>ID</key>
		<integer>2</integer>
		<key>Style</key>
		<dict>
			<key>shadow</key>
			<dict>
				<key>Draws</key>
				<string>NO</string>
			</dict>
			<key>stroke</key>
			<dict>
				<key>Draws</key>
				<string>NO</string>
			</dict>
		</dict>
	</dict>
	<key>CanvasOrigin</key>
	<string>{0, 0}</string>
	<key>ColumnAlign</key>
	<integer>1</integer>
	<key>ColumnSpacing</key>
	<real>36</real>
	<key>CreationDate</key>
	<string>2011-03-22 07:31:13 -0500</string>
	<key>Creator</key>
	<string>Remzi Arpaci-Dusseau</string>
	<key>DisplayScale</key>
	<string>1 0/72 in = 1 0/72 in</string>
	<key>GraphDocumentVersion</key>
	<integer>6</integer>
	<key>GraphicsList</key>
	<array>
		<dict>
			<key>Bounds</key>
			<string>{{238.25, 457}, {200.5, 264}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>Vertical</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>36</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Align</key>
				<integer>0</integer>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 void *producer(void *arg) \{\
  for (int i = 0; i &lt; loops; i++) \{\
    Mutex_lock(&amp;m);           // p1                                                                                                                                              \
    while (numfull == max)    // p2                                                                                                                                              \
      Cond_wait(&amp;empty, &amp;m);  // p3                                                                                                                                              \
    Mutex_unlock(&amp;m);         // p3a\
    do_fill(i);               // p4                                                                                                                                              \
    Mutex_lock(&amp;m);           // p4a\
    Cond_signal(&amp;fill);       // p5                                                                                                                                                                                                                                                                                           \
    Mutex_unlock(&amp;m);         // p6\
  \}\
\}\
void *consumer(void *arg) \{\
  while (1) \{                                                                                                                                                   \
    Mutex_lock(&amp;m);           // c1                                                                                                                                               \
    while (numfull == 0)      // c2                                                                                                                                               \
      Cond_wait(&amp;fill, &amp;m);   // c3                                                                                                                                               \
    Mutex_unlock(&amp;m);         // c3a\
    int tmp = do_get();       // c4                                                                                                                                               \
    Mutex_lock(&amp;m);           // c4a\
    Cond_signal(&amp;empty);      // c5                                                                                                                                               \
    Mutex_unlock(&amp;m);         // c6                                                                                                                                               \
  \}\
\}}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{237, 439}, {203, 14}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>YES</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>37</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc\pardirnatural

\f0\b\fs24 \cf0 Solution v4 (2 CVs, "while", unlock)}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
			<key>Wrap</key>
			<string>NO</string>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{229, 436}, {219, 292}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>ID</key>
			<integer>38</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{19.25, 457}, {200.5, 242}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>Vertical</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>32</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Align</key>
				<integer>0</integer>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 void *producer(void *arg) \{\
  for (int i = 0; i &lt; loops; i++) \{\
    Mutex_lock(&amp;m);           // p1                                                                                                                                              \
    while (numfull == max)    // p2                                                                                                                                              \
      Cond_wait(&amp;empty, &amp;m);  // p3                                                                                                                                              \
    do_fill(i);               // p4                                                                                                                                              \
    Cond_signal(&amp;fill);       // p5                                                                                                                                              \
    Mutex_unlock(&amp;m);         // p6                                                                                                                                              \
  \}\
\}\
void *consumer(void *arg) \{\
  while (1) \{                                                                                                                                                   \
    Mutex_lock(&amp;m);           // c1                                                                                                                                               \
    while (numfull == 0)      // c2                                                                                                                                               \
      Cond_wait(&amp;fill, &amp;m);   // c3                                                                                                                                               \
    int tmp = do_get();       // c4                                                                                                                                               \
    Cond_signal(&amp;empty);      // c5                                                                                                                                               \
    Mutex_unlock(&amp;m);         // c6                                                                                                                                               \
    printf("%d\\n", tmp);\
  \}\
\}\
}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{40.5, 439}, {158, 14}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>YES</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>33</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc\pardirnatural

\f0\b\fs24 \cf0 Solution v3 (2 CVs, "while")}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
			<key>Wrap</key>
			<string>NO</string>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{10, 436}, {219, 292}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>ID</key>
			<integer>34</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{53, 189}, {133, 14}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>YES</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>24</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc\pardirnatural

\f0\b\fs24 \cf0 Solution v1 (Single CV)}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
			<key>Wrap</key>
			<string>NO</string>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{22, 203}, {195, 242}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>Vertical</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>25</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Align</key>
				<integer>0</integer>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 void *producer(void *arg) \{\
  for (int i = 0; i &lt; loops; i++) \{\
    Mutex_lock(&amp;m);          // p1                                                                                                                                              \
    while (numfull == max)   // p2                                                                                                                                              \
      Cond_wait(&amp;cond, &amp;m);  // p3                                                                                                                                              \
    do_fill(i);              // p4                                                                                                                                              \
    Cond_signal(&amp;cond);      // p5                                                                                                                                              \
    Mutex_unlock(&amp;m);        // p6                                                                                                                                              \
  \}\
\}\
void *consumer(void *arg) \{\
  while (1) \{                                                                                                                                                    \
    Mutex_lock(&amp;m);          // c1                                                                                                                                               \
    while (numfull == 0)     // c2                                                                                                                                               \
      Cond_wait(&amp;cond, &amp;m);  // c3                                                                                                                                               \
    int tmp = do_get();      // c4                                                                                                                                               \
    Cond_signal(&amp;cond);      // c5                                                                                                                                               \
    Mutex_unlock(&amp;m);        // c6                                                                                                                                               \
    printf("%d\\n", tmp);\
  \}\
\}\
}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{10, 185}, {219, 251}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>ID</key>
			<integer>26</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{238.25, 203}, {200.5, 242}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>Vertical</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>28</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Align</key>
				<integer>0</integer>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 void *producer(void *arg) \{\
  for (int i = 0; i &lt; loops; i++) \{\
    Mutex_lock(&amp;m);           // p1                                                                                                                                              \
    if (numfull == max)       // p2                                                                                                                                              \
      Cond_wait(&amp;empty, &amp;m);  // p3                                                                                                                                              \
    do_fill(i);               // p4                                                                                                                                              \
    Cond_signal(&amp;fill);       // p5                                                                                                                                              \
    Mutex_unlock(&amp;m);         // p6                                                                                                                                              \
  \}\
\}\
void *consumer(void *arg) \{\
  while (1) \{                                                                                                                                                   \
    Mutex_lock(&amp;m);           // c1                                                                                                                                               \
    if (numfull == 0)         // c2                                                                                                                                               \
      Cond_wait(&amp;fill, &amp;m);   // c3                                                                                                                                               \
    int tmp = do_get();       // c4                                                                                                                                               \
    Cond_signal(&amp;empty);      // c5                                                                                                                                               \
    Mutex_unlock(&amp;m);         // c6                                                                                                                                               \
    printf("%d\\n", tmp);\
  \}\
\}\
}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{271, 189}, {135, 14}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>YES</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>29</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc\pardirnatural

\f0\b\fs24 \cf0 Solution v2 (2 CVs, "if")}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
			<key>Wrap</key>
			<string>NO</string>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{229, 185}, {219, 251}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>ID</key>
			<integer>30</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>Class</key>
			<string>Group</string>
			<key>Graphics</key>
			<array>
				<dict>
					<key>Bounds</key>
					<string>{{382, 13.5}, {99, 14}}</string>
					<key>Class</key>
					<string>ShapedGraphic</string>
					<key>FitText</key>
					<string>YES</string>
					<key>Flow</key>
					<string>Resize</string>
					<key>ID</key>
					<integer>16</integer>
					<key>Shape</key>
					<string>Rectangle</string>
					<key>Style</key>
					<dict>
						<key>fill</key>
						<dict>
							<key>Draws</key>
							<string>NO</string>
						</dict>
						<key>shadow</key>
						<dict>
							<key>Draws</key>
							<string>NO</string>
						</dict>
						<key>stroke</key>
						<dict>
							<key>Draws</key>
							<string>NO</string>
						</dict>
					</dict>
					<key>Text</key>
					<dict>
						<key>Pad</key>
						<integer>0</integer>
						<key>Text</key>
						<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc\pardirnatural

\f0\b\fs24 \cf0 QUEUE GET/PUT}</string>
						<key>VerticalPad</key>
						<integer>0</integer>
					</dict>
					<key>Wrap</key>
					<string>NO</string>
				</dict>
				<dict>
					<key>Bounds</key>
					<string>{{339.5, 38}, {184, 143}}</string>
					<key>Class</key>
					<string>ShapedGraphic</string>
					<key>FitText</key>
					<string>YES</string>
					<key>Flow</key>
					<string>Resize</string>
					<key>ID</key>
					<integer>17</integer>
					<key>Shape</key>
					<string>Rectangle</string>
					<key>Style</key>
					<dict>
						<key>fill</key>
						<dict>
							<key>Draws</key>
							<string>NO</string>
						</dict>
						<key>shadow</key>
						<dict>
							<key>Draws</key>
							<string>NO</string>
						</dict>
						<key>stroke</key>
						<dict>
							<key>Draws</key>
							<string>NO</string>
						</dict>
					</dict>
					<key>Text</key>
					<dict>
						<key>Align</key>
						<integer>0</integer>
						<key>Pad</key>
						<integer>0</integer>
						<key>Text</key>
						<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 void do_fill(int value) \{\
    buffer[fillptr] = value;\
    fillptr = (fillptr + 1) % max;\
    numfull++;\
\}\
\
int do_get() \{\
    int tmp = buffer[useptr];\
    useptr = (useptr + 1) % max;\
    numfull--;\
    return tmp;\
\}\
}</string>
						<key>VerticalPad</key>
						<integer>0</integer>
					</dict>
					<key>Wrap</key>
					<string>NO</string>
				</dict>
				<dict>
					<key>Bounds</key>
					<string>{{323, 9}, {219, 176}}</string>
					<key>Class</key>
					<string>ShapedGraphic</string>
					<key>ID</key>
					<integer>18</integer>
					<key>Shape</key>
					<string>Rectangle</string>
					<key>Style</key>
					<dict>
						<key>shadow</key>
						<dict>
							<key>Draws</key>
							<string>NO</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>ID</key>
			<integer>15</integer>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{112.5, 13.5}, {97, 14}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>YES</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>20</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc\pardirnatural

\f0\b\fs24 \cf0 MAIN PROGRAM}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
			<key>Wrap</key>
			<string>NO</string>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{15, 31}, {292, 143}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>FitText</key>
			<string>YES</string>
			<key>Flow</key>
			<string>Resize</string>
			<key>ID</key>
			<integer>21</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>fill</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
				<key>stroke</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
			<key>Text</key>
			<dict>
				<key>Align</key>
				<integer>0</integer>
				<key>Pad</key>
				<integer>0</integer>
				<key>Text</key>
				<string>{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 int main(int argc, char *argv[]) \{\
    max   = atoi(argv[1]);\
    loops = atoi(argv[2]);\
    consumers = atoi(argv[3]);\
    buffer = (int *) Malloc(max * sizeof(int));\
    pthread_t pid, cid[CMAX];\
    Pthread_create(&amp;pid, NULL, producer, NULL);\
    for (int i = 0; i &lt; consumers; i++)\
        Pthread_create(&amp;cid[i], NULL, consumer, NULL);\
    Pthread_join(pid, NULL);\
    for (i = 0; i &lt; consumers; i++)\
        Pthread_join(cid[i], NULL);\
\}}</string>
				<key>VerticalPad</key>
				<integer>0</integer>
			</dict>
			<key>Wrap</key>
			<string>NO</string>
		</dict>
		<dict>
			<key>Bounds</key>
			<string>{{10, 9}, {313, 176}}</string>
			<key>Class</key>
			<string>ShapedGraphic</string>
			<key>ID</key>
			<integer>22</integer>
			<key>Shape</key>
			<string>Rectangle</string>
			<key>Style</key>
			<dict>
				<key>shadow</key>
				<dict>
					<key>Draws</key>
					<string>NO</string>
				</dict>
			</dict>
		</dict>
	</array>
	<key>GridInfo</key>
	<dict/>
	<key>GuidesLocked</key>
	<string>NO</string>
	<key>GuidesVisible</key>
	<string>YES</string>
	<key>HPages</key>
	<integer>1</integer>
	<key>ImageCounter</key>
	<integer>1</integer>
	<key>KeepToScale</key>
	<false/>
	<key>Layers</key>
	<array>
		<dict>
			<key>Lock</key>
			<string>NO</string>
			<key>Name</key>
			<string>Layer 1</string>
			<key>Print</key>
			<string>YES</string>
			<key>View</key>
			<string>YES</string>
		</dict>
	</array>
	<key>LayoutInfo</key>
	<dict>
		<key>Animate</key>
		<string>NO</string>
		<key>circoMinDist</key>
		<real>18</real>
		<key>circoSeparation</key>
		<real>0.0</real>
		<key>layoutEngine</key>
		<string>dot</string>
		<key>neatoSeparation</key>
		<real>0.0</real>
		<key>twopiSeparation</key>
		<real>0.0</real>
	</dict>
	<key>LinksVisible</key>
	<string>NO</string>
	<key>MagnetsVisible</key>
	<string>NO</string>
	<key>MasterSheets</key>
	<array/>
	<key>ModificationDate</key>
	<string>2011-03-22 08:00:31 -0500</string>
	<key>Modifier</key>
	<string>Remzi Arpaci-Dusseau</string>
	<key>NotesVisible</key>
	<string>NO</string>
	<key>Orientation</key>
	<integer>2</integer>
	<key>OriginVisible</key>
	<string>NO</string>
	<key>PageBreaks</key>
	<string>YES</string>
	<key>PrintInfo</key>
	<dict>
		<key>NSBottomMargin</key>
		<array>
			<string>float</string>
			<string>41</string>
		</array>
		<key>NSLeftMargin</key>
		<array>
			<string>float</string>
			<string>18</string>
		</array>
		<key>NSPaperSize</key>
		<array>
			<string>size</string>
			<string>{612, 792}</string>
		</array>
		<key>NSRightMargin</key>
		<array>
			<string>float</string>
			<string>18</string>
		</array>
		<key>NSTopMargin</key>
		<array>
			<string>float</string>
			<string>18</string>
		</array>
	</dict>
	<key>PrintOnePage</key>
	<false/>
	<key>QuickLookPreview</key>
	<data>
	JVBERi0xLjMKJcTl8uXrp/Og0MTGCjUgMCBvYmoKPDwgL0xlbmd0aCA2IDAgUiAvRmls
	dGVyIC9GbGF0ZURlY29kZSA+PgpzdHJlYW0KeAHtfWtzHNeR5Xf8ihuKsAKUSLCrHwA6
	ZH6wGfbEbAxnrRHs3QjDgcDiQbXU6IbwIKlV8L/vrfd9ZN6qzFu2xusDxy7JIXWqOjuf
	J0/d+sl8a34yM/u/1cmxOVkszMON+V9mZ16/fSzM1aMpqv89XplXs6PVrPox/e/6/+jg
	1hQWZHlqFsXCFBbMAtn/m/kf9v/9UMO9/a660sx899ZetKj+8Kr8pbzu1V0JsG7/8wP7
	n39nb87ex7y8j5mx9+D8R8VxYY4X9k7K//D3Z/Y/LD/Eq7V5VSyPzavjuf2bszvz+o/F
	0eygMGe35nCzezJ3l5vdefW7y4f3Vy/N1feXD+Yr+/sPf/3b+Qvzywtz9oP5w1llle4G
	3WsdxNdaFc617Mcqr2Xsz93lJ/v/vzGXT/vN+WF1jcJe5JvmGgel5clrEJ9nWX7S9vM4
	19ju9/eP/jXm1TUOBj4HcY35mr7G1X73+Hx38xBcZ6G9TnFKX+f/PN/e3jzYD1N/QV/Z
	7+Pd5Xa7vzo/LE35lXnc/N+b/W31t+cvSkMqPuQJfe37p+8fbi6vL57M/ebausXm+q9v
	3/3uf/9Nc40FfYk/NZe4shd6ujk//LK60n/++T/+46W5f9hfP1/dPLw05Z91H61Y0te9
	3T80Ft1Y286+MRvzW9N9p/aPX399/kJhyvmKvl7p+tFnLQ26+Vv98ax5G4/K+biLY/ry
	7aV/2JeR3tlYZ9Ml4y6NTSe154oJC9ee9Ydyjan7XMdEqH8u89IBlftOijKb1nm2mNeJ
	1v76anl6tFgUs5VZ1qlpfjRrUtO73/37f5o//df//Lf/+t273rWimrKYL6qSMS/Wfclw
	kmJXGcp/uDbNPxsqDctFmZCP52UchsVhbW+bqg0f9ptrc72/uN1st3X6+XC5fb5hS8LQ
	NcqacEDk6zrH/bW8zP3Tw9+sA1XXaWuCX3ecixxQH4QrCg16lUnb339tCvthflMWJTqn
	ORcjrcZVh93z3e3zdvv11zpYqhh87l3GcYaBGySyblnw7Xf6/ubp/LD6Jql6MQDLZdUS
	++nu3tq4+UqfH2/Kb1RlBS6V1pjV99j8Nvdr5LJm8y2+eqW6fy5NPtw8PT/sSjupYKmM
	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
	cWGxjtbr5rPsNcId1mIWYjlI3/4/SoeEbAplbmRzdHJlYW0KZW5kb2JqCjYgMCBvYmoK
	MTgzMDcKZW5kb2JqCjMgMCBvYmoKPDwgL1R5cGUgL1BhZ2UgL1BhcmVudCA0IDAgUiAv
	UmVzb3VyY2VzIDcgMCBSIC9Db250ZW50cyA1IDAgUiAvTWVkaWFCb3ggWzAgMCA1NzYg
	NzMzXQo+PgplbmRvYmoKNyAwIG9iago8PCAvUHJvY1NldCBbIC9QREYgL1RleHQgXSAv
	Q29sb3JTcGFjZSA8PCAvQ3MxIDggMCBSIC9DczIgOSAwIFIgPj4gL0ZvbnQgPDwKL0Yx
	LjAgMTAgMCBSIC9GMi4wIDExIDAgUiA+PiA+PgplbmRvYmoKMTIgMCBvYmoKPDwgL0xl
	bmd0aCAxMyAwIFIgL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxh
	dGVEZWNvZGUgPj4Kc3RyZWFtCngBhZRNSBRhGMf/s40EsQbRlwjF0MEkVCYLUgLT9StT
	tmXVTAlinX13nRxnp5ndLUUihOiYdYwuVkSHiE7hoUOnOkQEmXWJoKNFEAVeIrb/O5O7
	Y1S+MDO/eZ7/+3y9wwBVj1KOY0U0YMrOu8nemHZ6dEzb/BpVqEYUXCnDczoSiQGfqZXP
	9Wv1LRRpWWqUsdb7NnyrdpkQUDQqd2QDPix5PODjki/knTw1ZyQbE6k02SE3uEPJTvIt
	8tZsiMdDnBaeAVS1U5MzHJdxIjvILUUjK2M+IOt22rTJ76U97RlT1LDfyDc5C9q48v1A
	2x5g04uKbcwDHtwDdtdVbPU1wM4RYPFQxfY96c9H2fXKyxxq9sMp0Rhr+lAqfa8DNt8A
	fl4vlX7cLpV+3mEO1vHUMgpu0deyMOUlENQb7Gb85Br9i4OefFULsMA5jmwB+q8ANz8C
	+x8C2x8DiWpgqBWRy2w3uPLiIucCdOacadfMTuS1Zl0/onXwaIXWZxtNDVrKsjTf5Wmu
	8IRbFOkmTFkFztlf23iPCnt4kE/2F7kkvO7frMylU12cJZrY1qe06OomN5DvZ8yePnI9
	r/cZt2c4YOWAme8bCjhyyrbiPBepidTY4/GTZMZXVCcfk/OQPOcVB2VM334udSJBrqU9
	OZnrl5pd3Ns+MzHEM5KsWDMTnfHf/MYtJGXefdTcdSz/m2dtkWcYhQUBEzbvNjQk0YsY
	GuHARQ4ZekwqTFqlX9BqwsPkX5UWEuVdFhW9WOGeFX/PeRS4W8Y/hVgccw3lCJr+Tv+i
	L+sL+l3983xtob7imXPPmsara18ZV2aW1ci4QY0yvqwpiG+w2g56LWRpneIV9OSV9Y3h
	6jL2fG3Zo8kc4mp8NdSlCGVqxDjjya5l90WyxTfh51vL9q/pUft89klNJdeyunhmKfp8
	NlwNa/+zq2DSsqvw5I2QLjxroe5VD6p9aovaCk09prarbWoX346qA+Udw5yViQus22X1
	KfZgY5reyklXZovg38Ivhv+lXmEL1zQ0+Q9NuLmMaQnfEdw2cIeU/8NfswMN3gplbmRz
	dHJlYW0KZW5kb2JqCjEzIDAgb2JqCjc5MgplbmRvYmoKOCAwIG9iagpbIC9JQ0NCYXNl
	ZCAxMiAwIFIgXQplbmRvYmoKMTQgMCBvYmoKPDwgL0xlbmd0aCAxNSAwIFIgL04gMSAv
	QWx0ZXJuYXRlIC9EZXZpY2VHcmF5IC9GaWx0ZXIgL0ZsYXRlRGVjb2RlID4+CnN0cmVh
	bQp4AYVST0gUURz+zTYShIhBhXiIdwoJlSmsrKDadnVZlW1bldKiGGffuqOzM9Ob2TXF
	kwRdojx1D6JjdOzQoZuXosCsS9cgqSAIPHXo+83s6iiEb3k73/v9/X7fe0RtnabvOylB
	VHNDlSulp25OTYuDHylFHdROWKYV+OlicYyx67mSv7vX1mfS2LLex7V2+/Y9tZVlYCHq
	Lba3EPohkWYAH5mfKGWAs8Adlq/YPgE8WA6sGvAjogMPmrkw09GcdKWyLZFT5qIoKq9i
	O0mu+/m5xr6LtYmD/lyPZtaOvbPqqtFM1LT3RKG8D65EGc9fVPZsNRSnDeOcSEMaKfKu
	1d8rTMcRkSsQSgZSNWS5n2pOnXXgdRi7XbqT4/j2EKU+yWCoibXpspkdhX0AdirL7BDw
	BejxsmIP54F7Yf9bUcOTwCdhP2SHedatH/YXrlPge4Q9NeDOFK7F8dqKH14tAUP3VCNo
	jHNNxNPXOXOkiO8x1BmY90Y5pgsxd5aqEzeAO2EfWapmCrFd+67qJe57AnfT4zvRmzkL
	XKAcSXKxFdkU0DwJWBR9i7BJDjw+zh5V4HeomMAcuYnczSj3HtURG2ejUoFWeo1Xxk/j
	ufHF+GVsGM+Afqx213t8/+njFXXXtj48+Y163DmuvZ0bVWFWcWUL3f/HMoSP2Sc5psHT
	oVlYa9h25A+azEywDCjEfwU+l/qSE1Xc1e7tuEUSzFA+LGwluktUbinU6j2DSqwcK9gA
	dnCSxCxaHLhTa7o5eHfYInpt+U1XsuuG/vr2evva8h5tyqgpKBPNs0RmlLFbo+TdeNv9
	ZpERnzg6vue9ilrJ/klFED+FOVoq8hRV9FZQ1sRvZw5+G7Z+XD+l5/VB/TwJPa2f0a/o
	oxG+DHRJz8JzUR+jSfCwaSHiEqCKgzPUTlRjjQPiKfHytFtkkf0PQBn9ZgplbmRzdHJl
	YW0KZW5kb2JqCjE1IDAgb2JqCjcwNAplbmRvYmoKOSAwIG9iagpbIC9JQ0NCYXNlZCAx
	NCAwIFIgXQplbmRvYmoKNCAwIG9iago8PCAvVHlwZSAvUGFnZXMgL01lZGlhQm94IFsw
	IDAgNjEyIDc5Ml0gL0NvdW50IDEgL0tpZHMgWyAzIDAgUiBdID4+CmVuZG9iagoxNiAw
	IG9iago8PCAvVHlwZSAvQ2F0YWxvZyAvT3V0bGluZXMgMiAwIFIgL1BhZ2VzIDQgMCBS
	ID4+CmVuZG9iagoyIDAgb2JqCjw8IC9MYXN0IDE3IDAgUiAvRmlyc3QgMTggMCBSID4+
	CmVuZG9iagoxOCAwIG9iago8PCAvQ291bnQgMCAvRGVzdCBbIDMgMCBSIC9YWVogMCA3
	MzMgMCBdIC9UaXRsZSAoQ2FudmFzIDEpID4+CmVuZG9iagoxNyAwIG9iago8PCAvQ291
	bnQgMCAvRGVzdCBbIDMgMCBSIC9YWVogMCA3MzMgMCBdIC9UaXRsZSAoQ2FudmFzIDEp
	ID4+CmVuZG9iagoxOSAwIG9iago8PCAvTGVuZ3RoIDIwIDAgUiAvTGVuZ3RoMSAyMDQx
	MiAvRmlsdGVyIC9GbGF0ZURlY29kZSA+PgpzdHJlYW0KeAHVfIljVNW9/zn33tkyk8w+
	k8ns650tmclkX4CZkCACIiKyiNEgiIgioIAi9SFVShGpGyogLlVIgWcV2SyIuEWsr1L1
	J2qxWumvqctrmlpFoRgmv885M4no6+8PeAxnP/fcc77nu59zQyghREduIyLJzl4wa5HU
	KI1BzZsI/2f2siW+U3cs2kkIfZwQ4Z65i65eMMu+aAIhUhrt66++bvncZ7ft+BrllwgZ
	sXfeVbPmnL64F/3blqC9fh4qlH8bfBTlp1AOzVuw5ObQx6E4ym+jfPK6hbNnPejc9iEh
	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
	ZW5kc3RyZWFtCmVuZG9iagoyMCAwIG9iagoxMzk5MQplbmRvYmoKMjEgMCBvYmoKPDwg
	L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Bc2NlbnQgNzU0IC9DYXBIZWlnaHQgNjcwIC9E
	ZXNjZW50IC0yNDYgL0ZsYWdzIDMzCi9Gb250QkJveCBbLTEwIC0yMzYgNjEzIDcwNV0g
	L0ZvbnROYW1lIC9UQUZCTFQrQ291cmllciAvSXRhbGljQW5nbGUgMCAvU3RlbVYKMCAv
	TWF4V2lkdGggODIzIC9YSGVpZ2h0IDUwMyAvRm9udEZpbGUyIDE5IDAgUiA+PgplbmRv
	YmoKMjIgMCBvYmoKWyA2MDAgMCA2MDAgMCAwIDYwMCA2MDAgMCA2MDAgNjAwIDYwMCA2
	MDAgNjAwIDYwMCAwIDYwMCA2MDAgNjAwIDYwMCA2MDAgNjAwCjYwMCA2MDAgMCAwIDAg
	MCA2MDAgNjAwIDYwMCAwIDAgMCA2MDAgMCA2MDAgMCAwIDAgMCAwIDAgMCAwIDYwMCA2
	MDAgNjAwIDAKNjAwIDAgMCAwIDAgNjAwIDAgMCA2MDAgMCAwIDYwMCA2MDAgNjAwIDAg
	NjAwIDAgNjAwIDYwMCA2MDAgNjAwIDYwMCA2MDAgNjAwCjYwMCA2MDAgNjAwIDYwMCA2
	MDAgNjAwIDYwMCA2MDAgNjAwIDAgNjAwIDYwMCA2MDAgNjAwIDYwMCA2MDAgNjAwIDYw
	MCA2MDAKNjAwIDAgNjAwIF0KZW5kb2JqCjEwIDAgb2JqCjw8IC9UeXBlIC9Gb250IC9T
	dWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1RBRkJMVCtDb3VyaWVyIC9Gb250RGVz
	Y3JpcHRvcgoyMSAwIFIgL1dpZHRocyAyMiAwIFIgL0ZpcnN0Q2hhciAzMiAvTGFzdENo
	YXIgMTI1IC9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZwo+PgplbmRvYmoKMjMgMCBv
	YmoKPDwgL0xlbmd0aCAyNCAwIFIgL0xlbmd0aDEgMTI3MDAgL0ZpbHRlciAvRmxhdGVE
	ZWNvZGUgPj4Kc3RyZWFtCngBvXoLdBRF1n9Vv+eZeWSeecx0ZiaT9+SdDATSCUkIJuEd
	SJBIQggbEBAQo4i4CGogKOKuCLJ8yyooiLo7BBcGWf1zWBQU+BZFPxRR3BUVxCj6RUBg
	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
	z/U2tDteMtJ1rALqe11HMsIURG95wwyW4lyHvQ+4/lyS7nq5ZKir1w9lva6dFRDtdm0t
	ecC15UGl5JkMJXraG8Ybe11/INFu12Z4/5MrlIp1sQeXx6L5Dyod3bFLiebtClMv7HbN
	9aa6psODWNK4WrxzXFO9QdfEijD29boayGO7XfX+Y6460nWvS4p1VBx7e5FXoTg/1m2W
	d58rLdZDCmktmV1ub70rCd6f9YcnXVne21wVGWG8fU9tWoa31v9kcRj3K32QCAgl0bxY
	1O5/FW+D08HpeAq4tZ/aVZsONOO1va4VEG3cVZtW4gvT5ySTa5e/1v8ghGIIPgiNYTxR
	yuLX8zP4Rr6Az+TT+VTw5CTzCXy8YBIMgl7QCmpBAC8u2HgCEuLD0U+kTKIt4jk4Ww+a
	kiF3RkkbQFZhPw8CCeINjnYKBCzMoYesXeX2ctNwY7Cm6mdurUpha1XmP3+wqA3+7Dgp
	9CQcYAvtSGoO5ZNENKl5sPb/L9FRCc/XjV+8a/ziC5OUM5Ce6o5WOAoZWt0FR1WXTXe7
	d15YTCrIabzW6e2dJG7rCC32dFSFLniq3DvHK8/9pHoSqR7vqdqJJlVPbNo5Seqo6h0v
	jSdnHJt3ja2uhaUaOrnR16rBvmqrf6avavKyWtLXWOW5n/Q1mlSPJX2NJn2NJn2NlcYq
	fWVmVs+aUIn+L+eEInMKZW5kc3RyZWFtCmVuZG9iagoyNCAwIG9iago4ODcyCmVuZG9i
	agoyNSAwIG9iago8PCAvVHlwZSAvRm9udERlc2NyaXB0b3IgL0FzY2VudCA3NzAgL0Nh
	cEhlaWdodCA2ODQgL0Rlc2NlbnQgLTIzMCAvRmxhZ3MgMzIKL0ZvbnRCQm94IFstNTUg
	LTIxOCA3NjkgNzQxXSAvRm9udE5hbWUgL1RVTFpURStIZWx2ZXRpY2EtQm9sZCAvSXRh
	bGljQW5nbGUKMCAvU3RlbVYgMCAvTWF4V2lkdGggMTUwMCAvWEhlaWdodCA1MTMgL0Zv
	bnRGaWxlMiAyMyAwIFIgPj4KZW5kb2JqCjI2IDAgb2JqClsgMjc4IDAgNDc0IDAgMCAw
	IDAgMCAzMzMgMzMzIDAgMCAyNzggMCAwIDI3OCAwIDU1NiA1NTYgNTU2IDU1NiAwIDAg
	MCAwIDAKMCAwIDAgMCAwIDAgMCA3MjIgMCA3MjIgMCA2NjcgMCA3NzggMCAyNzggMCAw
	IDAgODMzIDcyMiA3NzggNjY3IDc3OCA3MjIgNjY3CjYxMSA3MjIgNjY3IDAgMCAwIDAg
	MCAwIDAgMCAwIDAgMCAwIDU1NiAwIDU1NiAzMzMgNjExIDYxMSAyNzggMCA1NTYgMjc4
	IDAKNjExIDYxMSAwIDAgMCA1NTYgMzMzIDYxMSA1NTYgNzc4IF0KZW5kb2JqCjExIDAg
	b2JqCjw8IC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1RV
	TFpURStIZWx2ZXRpY2EtQm9sZCAvRm9udERlc2NyaXB0b3IKMjUgMCBSIC9XaWR0aHMg
	MjYgMCBSIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDExOSAvRW5jb2RpbmcgL01hY1Jv
	bWFuRW5jb2RpbmcKPj4KZW5kb2JqCjEgMCBvYmoKPDwgL1Byb2R1Y2VyIChNYWMgT1Mg
	WCAxMC41LjggUXVhcnR6IFBERkNvbnRleHQpIC9DcmVhdGlvbkRhdGUgKEQ6MjAxMTAz
	MjIxMzAwMzlaMDAnMDAnKQovTW9kRGF0ZSAoRDoyMDExMDMyMjEzMDAzOVowMCcwMCcp
	ID4+CmVuZG9iagp4cmVmCjAgMjcKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDQ1MzEw
	IDAwMDAwIG4gCjAwMDAwMjA2MTUgMDAwMDAgbiAKMDAwMDAxODQyNCAwMDAwMCBuIAow
	MDAwMDIwNDY2IDAwMDAwIG4gCjAwMDAwMDAwMjIgMDAwMDAgbiAKMDAwMDAxODQwMyAw
	MDAwMCBuIAowMDAwMDE4NTI4IDAwMDAwIG4gCjAwMDAwMTk1NjYgMDAwMDAgbiAKMDAw
	MDAyMDQzMCAwMDAwMCBuIAowMDAwMDM1NDcwIDAwMDAwIG4gCjAwMDAwNDUxMzAgMDAw
	MDAgbiAKMDAwMDAxODY1MSAwMDAwMCBuIAowMDAwMDE5NTQ2IDAwMDAwIG4gCjAwMDAw
	MTk2MDIgMDAwMDAgbiAKMDAwMDAyMDQxMCAwMDAwMCBuIAowMDAwMDIwNTQ5IDAwMDAw
	IG4gCjAwMDAwMjA3NDEgMDAwMDAgbiAKMDAwMDAyMDY2MyAwMDAwMCBuIAowMDAwMDIw
	ODE5IDAwMDAwIG4gCjAwMDAwMzQ5MDEgMDAwMDAgbiAKMDAwMDAzNDkyMyAwMDAwMCBu
	IAowMDAwMDM1MTQyIDAwMDAwIG4gCjAwMDAwMzU2NDMgMDAwMDAgbiAKMDAwMDA0NDYw
	NiAwMDAwMCBuIAowMDAwMDQ0NjI3IDAwMDAwIG4gCjAwMDAwNDQ4NTQgMDAwMDAgbiAK
	dHJhaWxlcgo8PCAvU2l6ZSAyNyAvUm9vdCAxNiAwIFIgL0luZm8gMSAwIFIgL0lEIFsg
	PDg0MmZjNTE2MjE0YTYyMzE1MzliODA0ZWY1OTEzMTk5Pgo8ODQyZmM1MTYyMTRhNjIz
	MTUzOWI4MDRlZjU5MTMxOTk+IF0gPj4Kc3RhcnR4cmVmCjQ1NDUyCiUlRU9GCjEgMCBv
	YmoKPDwvQXV0aG9yIChSZW16aSBBcnBhY2ktRHVzc2VhdSkvQ3JlYXRpb25EYXRlIChE
	OjIwMTEwMzIyMTIzMTAwWikvQ3JlYXRvciAoT21uaUdyYWZmbGUgNS4yLjMpL01vZERh
	dGUgKEQ6MjAxMTAzMjIxMzAwMDBaKS9Qcm9kdWNlciAoTWFjIE9TIFggMTAuNS44IFF1
	YXJ0eiBQREZDb250ZXh0KS9UaXRsZSAoVGhyZWFkcy1DVi1IYW5kb3V0LmdyYWZmbGUp
	Pj4KZW5kb2JqCnhyZWYKMSAxCjAwMDAwNDYxNTAgMDAwMDAgbiAKdHJhaWxlcgo8PC9J
	RCBbPDg0MmZjNTE2MjE0YTYyMzE1MzliODA0ZWY1OTEzMTk5PiA8ODQyZmM1MTYyMTRh
	NjIzMTUzOWI4MDRlZjU5MTMxOTk+XSAvSW5mbyAxIDAgUiAvUHJldiA0NTQ1MiAvUm9v
	dCAxNiAwIFIgL1NpemUgMjc+PgpzdGFydHhyZWYKNDYzNjkKJSVFT0YK
	</data>
	<key>QuickLookThumbnail</key>
	<data>
	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
	</data>
	<key>ReadOnly</key>
	<string>NO</string>
	<key>RowAlign</key>
	<integer>1</integer>
	<key>RowSpacing</key>
	<real>36</real>
	<key>SheetTitle</key>
	<string>Canvas 1</string>
	<key>SmartAlignmentGuidesActive</key>
	<string>YES</string>
	<key>SmartDistanceGuidesActive</key>
	<string>YES</string>
	<key>UniqueID</key>
	<integer>1</integer>
	<key>UseEntirePage</key>
	<false/>
	<key>VPages</key>
	<integer>1</integer>
	<key>WindowInfo</key>
	<dict>
		<key>CurrentSheet</key>
		<integer>0</integer>
		<key>ExpandedCanvases</key>
		<array>
			<dict>
				<key>name</key>
				<string>Canvas 1</string>
			</dict>
		</array>
		<key>Frame</key>
		<string>{{84, 26}, {908, 1001}}</string>
		<key>ListView</key>
		<true/>
		<key>OutlineWidth</key>
		<integer>142</integer>
		<key>RightSidebar</key>
		<false/>
		<key>ShowRuler</key>
		<true/>
		<key>Sidebar</key>
		<true/>
		<key>SidebarWidth</key>
		<integer>120</integer>
		<key>VisibleRegion</key>
		<string>{{-99, -57}, {773, 847}}</string>
		<key>Zoom</key>
		<real>1</real>
		<key>ZoomValues</key>
		<array>
			<array>
				<string>Canvas 1</string>
				<real>1</real>
				<real>1</real>
			</array>
		</array>
	</dict>
	<key>saveQuickLookFiles</key>
	<string>YES</string>
</dict>
</plist>
